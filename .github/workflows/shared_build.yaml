name: shared build

on:
  workflow_call:
    secrets:
      PAT:
        required: true
        description: "private access token"

    inputs:
      # the application that u want to deploy
      app_repository:
        required: true
        type: string

      app_branch:
        required: false
        type: string
        default: develop

      # the environment configs that u want to get
      config_repository:
        required: false
        type: string
        default: aoda-zhang/shared-configs
      config_folder:
        required: true
        type: string

      # the build artifact options
      build_name:
        required: true
        type: string
      build_path:
        required: false
        type: string
        default: build

      # the build script in package.json
      build_script:
        required: false
        type: string
        default: build

      # the environment that u want to deploy (uat,prod)
      currentEnvironment:
        required: false
        type: string
        default: UAT

jobs:
  Checkout-configs:
    environment: ${{ inputs.currentEnvironment }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout configs"
        uses: actions/checkout@master
        with:
          repository: ${{ inputs.config_repository }}
          ref: main
          token: ${{ secrets.PAT }}
          path: config

      - name: "Checkout codes"
        uses: actions/checkout@master
        with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch }}
          token: ${{ secrets.PAT }}
          path: app

      - name: "Set env configs"
        run: |
          cp -r ./config/${{ inputs.config_folder }}/. ./app/src/config/.
          mv app/* .
          rm -r app
          rm -r config

      - name: "Set node"
        uses: actions/setup-node@master
        with:
          cache: "yarn"
          check-latest: true
      - run: |
          yarn && yarn run ${{ inputs.build_script }}

      - name: "Upload artifacts"
        uses: actions/upload-artifact@master
        with:
          name: ${{ inputs.build_name }}
          path: ${{ inputs.build_path }}
